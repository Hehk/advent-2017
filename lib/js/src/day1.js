// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List       = require("bs-platform/lib/js/list.js");
var $$Array    = require("bs-platform/lib/js/array.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

function parse(input) {
  return List.map((function (prim) {
                return parseInt(prim);
              }), $$Array.to_list(input.split("")));
}

function compute_point(a, b) {
  var match = +(a === b);
  if (match !== 0) {
    return a;
  } else {
    return 0;
  }
}

function run(input) {
  var input$1 = parse(input);
  var length = List.length(input$1);
  return List.fold_left((function (a, b) {
                return a + b | 0;
              }), 0, List.mapi((function (i, n) {
                    return compute_point(n, List.nth(input$1, Caml_int32.mod_(i + 1 | 0, length)));
                  }), input$1));
}

function run_2(input) {
  var input$1 = parse(input);
  var length = List.length(input$1);
  var offset = length / 2 | 0;
  return List.fold_left((function (a, b) {
                return a + b | 0;
              }), 0, List.mapi((function (i, n) {
                    return compute_point(n, List.nth(input$1, Caml_int32.mod_(i + offset | 0, length)));
                  }), input$1));
}

exports.parse         = parse;
exports.compute_point = compute_point;
exports.run           = run;
exports.run_2         = run_2;
/* No side effect */
